<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/add_student" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/add_lecture" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/check_visit*" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/students" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
        <intercept-url pattern="/lectures" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
    </http>

    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="admin" password="admin" authorities="ROLE_ADMIN"/>
                <user name="guest" password="guest" authorities="ROLE_USER"/>
            </user-service>
            <!--<jdbc-user-service data-source-ref="dataSource"-->
            <!--users-by-username-query=-->
            <!--"SELECT username,password, enabled FROM users WHERE username=?"-->
            <!--authorities-by-username-query=-->
            <!--"SELECT username, role FROM user_roles WHERE username =?  "/>-->
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <!--<beans:property name="driverClassName" value=""-->
        <beans:property name="url" value="${jdbc.url}"/>
        <beans:property name="username" value="${jdbc.username}"/>
        <beans:property name="password" value="${jdbc.password}"/>
    </beans:bean>

    <beans:bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <beans:property name="locations">
            <beans:list>
                <beans:value>classpath:jdbc.properties</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>



    <!--<beans:import resource="dispatcher-servlet.xml"/>-->
</beans:beans>